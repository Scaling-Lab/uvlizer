{% capture layoutConfig %}{% render 'common-layout' with section as section %}{% endcapture %}

<nav 
class="inherit layout__{{-layoutConfig}} row middle header header--default header--{{section.settings.type}} 
{% if section.settings.transparent %}header--transparent{% endif %} 
font__size--{{-section.settings.fontSize}} logo--{{section.settings.logoPosition}}">
    <div class="layout__content row middle">
        <input type="checkbox" id="menuToggle" class="hide">
        <label for="menuToggle" class="hide-desktop close">{% render 'get-icon', icon: 'close' %}</label>
        <label for="menuToggle" class="overlay header__overlay"></label>

        <label class="col-min hide-desktop {% if section.settings.menuLinks == blank %}hide-mobile{% endif %}" for="menuToggle">{% render 'get-icon', icon: 'menu' %}</label>
        <div class="col-min {% if section.settings.logoPosition == 'left' %}col-md-9{% else %}col-md-6 center col-md-offset-3{% endif %} logo">{% render 'logo' %}</div>

        <div class="col col-md-3 middle nav__utils">
            <span class="search__icon hide-mobile" onclick="openSearch(false)">{% render 'get-icon', icon: 'search' %}</span>
            {% render 'header__general--utility' %}
        </div>

        <div class="col-12 links {{section.settings.linksAlignment}} links__hover--{{-section.settings.hoverStyle-}}">
        {% for link in linklists[section.settings.menuLinks].links %}
            {% if link.links != empty %}
                <span class="link {% if link.child_active or link.active %}active{%endif%}"><a class="header__link" href="{{ link.url }}">{{ link.title }}</a>
                <input class="submenu__toggle" type="checkbox" id="{{link.title | handleize | append: forloop.index}}">
                <label class="hide-desktop submenu__toggle--open" for="{{link.title | handleize | append: forloop.index}}">+</label>
                {% assign submenu = link.links %}
                {% if section.settings.megamenu %}
                    {% assign check_products = submenu | where: "type", "product_link" %}
                    {% assign check_collections = submenu | where: "type", "collection_link" %}
                    {% assign subsubmenu = false %}
                    {% assign check_list = false %}
                    {% for sublink in submenu %}
                        {% if sublink.links != empty %}
                            {% assign subsubmenu = true %}
                            {% assign check_submenu_list = sublink.links | where: "type", "product_link" %}
                            {% if check_submenu_list.size == sublink.links.size %}
                                {% assign check_list = true %}
                            {% endif %}
                            {% break %}
                        {% endif %}
                    {% endfor %}
					{% if submenu.size > 1 and subsubmenu or check_list %}
						{% render 'header__megamenu' with submenu as submenu %}
					{% elsif check_products != empty or check_collections != empty %}
                        {% render 'header__megamenu' with submenu as submenu %}
                    {% else %}
                        {% render 'header__submenu' with submenu as submenu %}
                    {% endif %}
                {% else %}
                    {% render 'header__submenu' with submenu as submenu %}
                {% endif %}
                </span>
            {% else %}
                <span class="link"><a class="header__link" href="{{ link.url }}">{{ link.title }}</a></span>
            {% endif %}
        {% else %}
        {% if settings.demo %}
            <span class="link"><a class="header__link" href="{{routes.root_url}}">Home</a></span>
            <span class="link"><a class="header__link" href="{{routes.all_products_collection_url}}">All products</a></span>
            <span class="link"><a class="header__link" href="#">About us</a></span>
            <span class="link"><a class="header__link" href="#">Contact</a></span>
        {% endif %}
        {% endfor %}
        </div>
    </div>
</nav>

{% if template == 'index' and section.settings.transparent or section.settings.overlap %}
    <style>
    .container > main {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 1;
    }

    .container > * {
        z-index: 2;
    }
    </style>
    {% if section.settings.sticky %}
        <script>
        const headerElement = document.querySelector('#shopify-section-{{section.id}} nav');
        headerElement.style.width = '100%';
        headerElement.style.top = '0px';
        window.addEventListener('scroll', ()=>{
            if (window.scrollY > 50){
                headerElement.style.position = 'fixed';
                headerElement.style.left = '50%';
                headerElement.style.marginLeft = '-' + headerElement.offsetWidth / 2 + 'px';
                if({{ section.settings.transparent }} && headerElement.classList.contains('header--transparent')){
                    headerElement.classList.remove('header--transparent');
                }
                return;
            }
            if({{ section.settings.transparent }} && !headerElement.classList.contains('header--transparent')){
                headerElement.classList.add('header--transparent')
            }
            if(headerElement.style.position == 'fixed'){
                headerElement.style.left = 'auto';
                headerElement.style.marginLeft = 'auto';
                headerElement.style.position = 'relative';
            }
        }, {passive: true});
        </script>
    {%endif%}    
{% endif %}